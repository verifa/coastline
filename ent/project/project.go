// Code generated by ent, DO NOT EDIT.

package project

import (
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the project type in the database.
	Label = "project"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// EdgeRequests holds the string denoting the requests edge name in mutations.
	EdgeRequests = "Requests"
	// Table holds the table name of the project in the database.
	Table = "projects"
	// RequestsTable is the table that holds the Requests relation/edge. The primary key declared below.
	RequestsTable = "request_Project"
	// RequestsInverseTable is the table name for the Request entity.
	// It exists in this package in order to avoid circular dependency with the "request" package.
	RequestsInverseTable = "requests"
)

// Columns holds all SQL columns for project fields.
var Columns = []string{
	FieldID,
	FieldName,
}

var (
	// RequestsPrimaryKey and RequestsColumn2 are the table columns denoting the
	// primary key for the Requests relation (M2M).
	RequestsPrimaryKey = []string{"request_id", "project_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
