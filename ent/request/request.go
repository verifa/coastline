// Code generated by ent, DO NOT EDIT.

package request

import (
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the request type in the database.
	Label = "request"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// EdgeProject holds the string denoting the project edge name in mutations.
	EdgeProject = "Project"
	// EdgeService holds the string denoting the service edge name in mutations.
	EdgeService = "Service"
	// EdgeApprovals holds the string denoting the approvals edge name in mutations.
	EdgeApprovals = "Approvals"
	// Table holds the table name of the request in the database.
	Table = "requests"
	// ProjectTable is the table that holds the Project relation/edge. The primary key declared below.
	ProjectTable = "request_Project"
	// ProjectInverseTable is the table name for the Project entity.
	// It exists in this package in order to avoid circular dependency with the "project" package.
	ProjectInverseTable = "projects"
	// ServiceTable is the table that holds the Service relation/edge. The primary key declared below.
	ServiceTable = "request_Service"
	// ServiceInverseTable is the table name for the Service entity.
	// It exists in this package in order to avoid circular dependency with the "service" package.
	ServiceInverseTable = "services"
	// ApprovalsTable is the table that holds the Approvals relation/edge. The primary key declared below.
	ApprovalsTable = "approval_Request"
	// ApprovalsInverseTable is the table name for the Approval entity.
	// It exists in this package in order to avoid circular dependency with the "approval" package.
	ApprovalsInverseTable = "approvals"
)

// Columns holds all SQL columns for request fields.
var Columns = []string{
	FieldID,
	FieldName,
}

var (
	// ProjectPrimaryKey and ProjectColumn2 are the table columns denoting the
	// primary key for the Project relation (M2M).
	ProjectPrimaryKey = []string{"request_id", "project_id"}
	// ServicePrimaryKey and ServiceColumn2 are the table columns denoting the
	// primary key for the Service relation (M2M).
	ServicePrimaryKey = []string{"request_id", "service_id"}
	// ApprovalsPrimaryKey and ApprovalsColumn2 are the table columns denoting the
	// primary key for the Approvals relation (M2M).
	ApprovalsPrimaryKey = []string{"approval_id", "request_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
