// Code generated by ent, DO NOT EDIT.

package approval

import (
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the approval type in the database.
	Label = "approval"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldIsAutomated holds the string denoting the is_automated field in the database.
	FieldIsAutomated = "is_automated"
	// FieldApprover holds the string denoting the approver field in the database.
	FieldApprover = "approver"
	// EdgeRequest holds the string denoting the request edge name in mutations.
	EdgeRequest = "Request"
	// Table holds the table name of the approval in the database.
	Table = "approvals"
	// RequestTable is the table that holds the Request relation/edge. The primary key declared below.
	RequestTable = "approval_Request"
	// RequestInverseTable is the table name for the Request entity.
	// It exists in this package in order to avoid circular dependency with the "request" package.
	RequestInverseTable = "requests"
)

// Columns holds all SQL columns for approval fields.
var Columns = []string{
	FieldID,
	FieldIsAutomated,
	FieldApprover,
}

var (
	// RequestPrimaryKey and RequestColumn2 are the table columns denoting the
	// primary key for the Request relation (M2M).
	RequestPrimaryKey = []string{"approval_id", "request_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultIsAutomated holds the default value on creation for the "is_automated" field.
	DefaultIsAutomated bool
	// ApproverValidator is a validator for the "approver" field. It is called by the builders before save.
	ApproverValidator func(string) error
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
